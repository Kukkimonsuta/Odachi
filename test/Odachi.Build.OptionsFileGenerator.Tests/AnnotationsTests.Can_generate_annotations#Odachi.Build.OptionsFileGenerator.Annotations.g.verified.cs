// HintName: Odachi.Build.OptionsFileGenerator.Annotations.g.cs
// <auto-generated />

#nullable enable

using System;

namespace Odachi.Annotations;

internal enum OptionsFileFormat
{
    /// <summary>
    /// Infer format from file name extension.
    /// </summary>
    Auto,
    /// <summary>
    /// Generate file as json.
    /// </summary>
    Json,
}

[AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)]
internal sealed class OptionsContainerAttribute : Attribute
{
    /// <summary>
    /// File path (absolute or relative to project file) where config file will be generated. When null, no file is generated for this class. Default value is null.
    /// </summary>
    public string? FileName { get; set; }

    /// <summary>
    /// Generated options file format. Default value is Auto.
    /// </summary>
    public OptionsFileFormat Format { get; set; } = OptionsFileFormat.Auto;

    /// <summary>
    /// Key under which this object is nested. Only used for root elements (= FileName is specified on this attribute). For deeply nested locations use colon (ex. 'Foo:Bar') as separator. Default value is null.
    /// </summary>
    public string? Key { get; set; }
}

[AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = true)]
internal sealed class OptionsPropertyAttribute : Attribute
{
    /// <summary>
    /// Comment shown above the option.
    /// </summary>
    public string? Comment { get; set; }

    /// <summary>
    /// Default value.
    /// </summary>
    public object? DefaultValue { get; set; }
}
