<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\..\tools\common.props" />

  <!--
  `Preprocess.msbuild` and following two targets are replaced by `PackageReference` below when using nuget package. This is just filthy
  workaround for development to avoid VS locking tasks assembly.

  <PackageReference Include="Odachi.RazorTemplating.MSBuild" Version="2.0.0" />
  -->
  <Target Name="RazorTemplatingRun" BeforeTargets="CoreCompile">
    <Exec Condition="'$(MSBuildRuntimeType)' == 'Core'" Command="dotnet &quot;msbuild&quot; &quot;$(MSBuildThisFileDirectory)Preprocess.msbuild&quot; /property:IntermediateOutputPath=$(IntermediateOutputPath) /property:Configuration=$(Configuration)" />
    <Exec Condition="'$(MSBuildRuntimeType)' != 'Core'" Command="&quot;$(MSBuildToolsPath)\MSBuild.exe&quot; &quot;$(MSBuildThisFileDirectory)Preprocess.msbuild&quot; /property:IntermediateOutputPath=$(IntermediateOutputPath) /property:Configuration=$(Configuration)" />
    <ItemGroup>
      <Compile Include="$(IntermediateOutputPath)OdachiRazorTemplatingCache/*.cs" Exclude="@(Compile)" />
    </ItemGroup>
  </Target>
  <Target Name="RazorTemplatingClean" BeforeTargets="Clean">
    <Exec Condition="'$(MSBuildRuntimeType)' == 'Core'" Command="dotnet &quot;msbuild&quot; &quot;$(MSBuildThisFileDirectory)Preprocess.msbuild&quot; /target:Clean /property:IntermediateOutputPath=$(IntermediateOutputPath) /property:Configuration=$(Configuration)" />
    <Exec Condition="'$(MSBuildRuntimeType)' != 'Core'" Command="&quot;$(MSBuildToolsPath)\MSBuild.exe&quot; &quot;$(MSBuildThisFileDirectory)Preprocess.msbuild&quot; /target:Clean /property:IntermediateOutputPath=$(IntermediateOutputPath) /property:Configuration=$(Configuration)" />
  </Target>

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <OutputType>Exe</OutputType>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="Resources/**/*" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Resources\" />
    <Folder Include="Properties\" />
  </ItemGroup>

</Project>
